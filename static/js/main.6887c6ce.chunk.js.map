{"version":3,"sources":["components/GoodsList/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","isReversed","sortBy","goodsSelector","reverseGoods","setState","resetGoods","goods","this","props","visibleGoods","filter","good","length","sort","good1","good2","localeCompare","reverse","className","map","key","type","onClick","classNames","buttonActive","defaultValue","onChange","target","value","Array","fill","_","i","Math","random","React","Component","goodsFromServer","App","isListVisible","showGoods","ReactDOM","render","document","getElementById"],"mappings":"6OAKaA,G,MAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,GACRC,cAAe,GAJnB,EAOEC,aAAe,WACb,EAAKC,UAAS,kBAAqB,CACjCJ,YADY,EAAGA,gBARrB,EAaEK,WAAa,WACX,EAAKD,SAAS,CACZJ,YAAY,EACZC,OAAQ,GACRC,cAAe,KAjBrB,4CAqBE,WAAU,IAAD,OACCI,EAAUC,KAAKC,MAAfF,MACR,EAA8CC,KAAKR,MAA3CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,cACtBO,EAAeH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUV,KAmBzD,OAjBAO,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,IAAK,WACH,OAAOa,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITZ,GACFS,EAAaQ,UAIb,oCACE,yBAAKC,UAAU,aACb,4BACGT,EAAaU,KAAI,SAAAR,GAAI,OAAK,wBAAIS,IAAKT,GAAOA,OAG7C,4BACEU,KAAK,SACLC,QAASf,KAAKJ,aACde,UAAWK,IAAW,SAAU,CAAEC,aAAcxB,KAHlD,WAOA,4BACEqB,KAAK,SACLH,UAAWK,IAAW,SAAU,CAC9BC,aAAyB,aAAXvB,IAEhBqB,QAAS,WACP,EAAKlB,SAAS,CACZH,OAAQ,eAPd,oBAaA,4BACEoB,KAAK,SACLH,UAAWK,IAAW,SAAU,CAC9BC,aAAyB,WAAXvB,IAEhBqB,QAAS,WACP,EAAKlB,SAAS,CACZH,OAAQ,aAPd,kBAaA,4BACEoB,KAAK,SACLH,UAAU,uBACVI,QAASf,KAAKF,YAHhB,SAOA,4BACEa,UAAU,uBACVO,aAAcvB,EACdwB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKvB,SAAS,CACZF,cAAeyB,EAAOC,SAG1BA,MAAO1B,GAEN,IAAI2B,MAAM,IAAIC,KAAK,GAAGX,KAAI,SAACY,EAAGC,GAAJ,OACzB,4BAAQZ,IAAKa,KAAKC,UAAWF,EAAI,aArG/C,GAA+BG,IAAMC,YCF/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoCaC,E,4MAhCbvC,MAAQ,CACNwC,eAAe,G,EAGjBC,UAAY,WACV,EAAKpC,SAAS,CACZmC,eAAe,K,4CAInB,WACE,IAAQA,EAAkBhC,KAAKR,MAAvBwC,cAER,OACE,8BACIA,GACA,4BACElB,KAAK,SACLC,QAASf,KAAKiC,WAFhB,SAQDD,GACC,kBAAC,EAAD,CAAWjC,MAAO+B,S,GA1BVF,IAAMC,WCZxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6887c6ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './GoodsList.css';\n\nexport class GoodsList extends React.Component {\n  state = {\n    isReversed: false,\n    sortBy: '',\n    goodsSelector: 1,\n  }\n\n  reverseGoods = () => {\n    this.setState(({ isReversed }) => ({\n      isReversed: !isReversed,\n    }));\n  }\n\n  resetGoods = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      goodsSelector: 1,\n    });\n  }\n\n  render() {\n    const { goods } = this.props;\n    const { isReversed, sortBy, goodsSelector } = this.state;\n    const visibleGoods = goods.filter(good => good.length >= goodsSelector);\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <>\n        <div className=\"GoodsList\">\n          <ul>\n            {visibleGoods.map(good => (<li key={good}>{good}</li>\n            ))}\n          </ul>\n          <button\n            type=\"button\"\n            onClick={this.reverseGoods}\n            className={classNames('button', { buttonActive: isReversed })}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              buttonActive: sortBy === 'alphabet',\n            })}\n            onClick={() => {\n              this.setState({\n                sortBy: 'alphabet',\n              });\n            }}\n          >\n            Sort by alphabet\n          </button>\n          <button\n            type=\"button\"\n            className={classNames('button', {\n              buttonActive: sortBy === 'length',\n            })}\n            onClick={() => {\n              this.setState({\n                sortBy: 'length',\n              });\n            }}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className=\"button button__hover\"\n            onClick={this.resetGoods}\n          >\n            Reset\n          </button>\n          <select\n            className=\"button button__hover\"\n            defaultValue={goodsSelector}\n            onChange={({ target }) => {\n              this.setState({\n                goodsSelector: target.value,\n              });\n            }}\n            value={goodsSelector}\n          >\n            {new Array(10).fill(0).map((_, i) => (\n              <option key={Math.random()}>{i + 1}</option>\n            ))}\n          </select>\n        </div>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isListVisible: false,\n  };\n\n  showGoods = () => {\n    this.setState({\n      isListVisible: true,\n    });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div>\n        {!isListVisible && (\n          <button\n            type=\"button\"\n            onClick={this.showGoods}\n          >\n            Start\n          </button>\n        )}\n\n        {isListVisible && (\n          <GoodsList goods={goodsFromServer} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}